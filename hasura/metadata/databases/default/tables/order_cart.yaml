table:
  name: cart
  schema: order
configuration:
  custom_column_names: {}
  custom_root_fields:
    delete: deleteCarts
    delete_by_pk: deleteCart
    insert: createCarts
    insert_one: createCart
    select: carts
    select_aggregate: cartsAggregate
    select_by_pk: cart
    update: updateCarts
    update_by_pk: updateCart
object_relationships:
- name: activeCartPayment
  using:
    foreign_key_constraint_on: activeCartPaymentId
- name: brand
  using:
    manual_configuration:
      column_mapping:
        brandId: id
      insertion_order: null
      remote_table:
        name: brand
        schema: brands
- name: experienceBooking
  using:
    manual_configuration:
      column_mapping:
        id: cartId
      insertion_order: null
      remote_table:
        name: experienceBooking
        schema: experiences
- name: experienceClass
  using:
    foreign_key_constraint_on: experienceClassId
- name: experienceClassType
  using:
    foreign_key_constraint_on: experienceClassTypeId
- name: location
  using:
    foreign_key_constraint_on: locationId
- name: locationKiosk
  using:
    foreign_key_constraint_on: locationKioskId
- name: locationTable
  using:
    foreign_key_constraint_on: locationTableId
- name: order
  using:
    foreign_key_constraint_on: orderId
- name: orderStatus
  using:
    manual_configuration:
      column_mapping:
        status: value
      insertion_order: null
      remote_table:
        name: orderStatusEnum
        schema: order
- name: parentCart
  using:
    foreign_key_constraint_on: parentCartId
- name: subscriptionOccurence
  using:
    manual_configuration:
      column_mapping:
        subscriptionOccurenceId: id
      insertion_order: null
      remote_table:
        name: subscriptionOccurence
        schema: subscription
- name: subscriptionOccurenceCustomer
  using:
    manual_configuration:
      column_mapping:
        id: cartId
      insertion_order: null
      remote_table:
        name: subscriptionOccurence_customer
        schema: subscription
array_relationships:
- name: cartItems
  using:
    foreign_key_constraint_on:
      column: cartId
      table:
        name: cartItem
        schema: order
- name: cartPayments
  using:
    foreign_key_constraint_on:
      column: cartId
      table:
        name: cartPayment
        schema: order
- name: cartRewards
  using:
    foreign_key_constraint_on:
      column: cartId
      table:
        name: cart_rewards
        schema: order
- name: childCarts
  using:
    foreign_key_constraint_on:
      column: parentCartId
      table:
        name: cart
        schema: order
- name: loyaltyPointTransactions
  using:
    foreign_key_constraint_on:
      column: orderCartId
      table:
        name: loyaltyPointTransaction
        schema: crm
- name: paymentHistories
  using:
    foreign_key_constraint_on:
      column: cartId
      table:
        name: stripePaymentHistory
        schema: order
- name: rewardHistories
  using:
    foreign_key_constraint_on:
      column: orderCartId
      table:
        name: rewardHistory
        schema: crm
computed_fields:
- comment: ""
  definition:
    function:
      name: addOnTotal
      schema: order
  name: addOnTotal
- comment: ""
  definition:
    function:
      name: availablePaymentOptionToCart
      schema: order
  name: availablePaymentOptionToCart
- comment: This is the amount to be paid
  definition:
    function:
      name: balancePayment
      schema: order
  name: balancePayment
- comment: ""
  definition:
    function:
      name: cartBillingDetails
      schema: order
  name: billingDetails
- comment: ""
  definition:
    function:
      name: cartBillingDetails2
      schema: order
  name: billingDetails2
- comment: ""
  definition:
    function:
      name: cartBilling
      schema: cartFunctions
  name: cartBilling
- comment: ""
  definition:
    function:
      name: cartBillingForChilds
      schema: cartFunctions
  name: cartBillingForChilds
- comment: ""
  definition:
    function:
      name: cartBillingForParent
      schema: cartFunctions
  name: cartBillingForParent
- comment: ""
  definition:
    function:
      name: cartBillingForSelf
      schema: cartFunctions
  name: cartBillingForSelf
- comment: ""
  definition:
    function:
      name: cartOwnerBilling
      schema: cartFunctions
  name: cartOwnerBilling
- comment: ""
  definition:
    function:
      name: deliveryPrice
      schema: order
  name: deliveryPrice
- comment: ""
  definition:
    function:
      name: deliveryPrice2
      schema: order
  name: deliveryPrice2
- comment: ""
  definition:
    function:
      name: discount
      schema: order
  name: discount
- comment: ""
  definition:
    function:
      name: discount2
      schema: order
  name: discount2
- comment: ""
  definition:
    function:
      name: isCartValid
      schema: order
  name: isCartValid
- comment: ""
  definition:
    function:
      name: isHostCart
      schema: order
  name: isHostCart
- comment: ""
  definition:
    function:
      name: isHostParticipant
      schema: order
  name: isHostParticipant
- comment: ""
  definition:
    function:
      name: itemTotal
      schema: order
  name: itemTotal
- comment: ""
  definition:
    function:
      name: itemTotal2
      schema: order
  name: itemTotal2
- comment: ""
  definition:
    function:
      name: loyaltyPointsUsable
      schema: order
  name: loyaltyPointsUsable
- comment: ""
  definition:
    function:
      name: subTotal
      schema: order
  name: subTotal
- comment: ""
  definition:
    function:
      name: subTotal2
      schema: order
  name: subTotal2
- comment: ""
  definition:
    function:
      name: tax
      schema: order
  name: tax
- comment: ""
  definition:
    function:
      name: tax2
      schema: order
  name: tax2
- comment: ""
  definition:
    function:
      name: taxPercent
      schema: order
  name: taxPercent
- comment: ""
  definition:
    function:
      name: toPayByParent2
      schema: order
  name: toPayByParent
- comment: ""
  definition:
    function:
      name: totalExperiencePrice
      schema: order
  name: totalExperiencePrice
- comment: ""
  definition:
    function:
      name: totalKit
      schema: order
  name: totalKit
- comment: ""
  definition:
    function:
      name: totalKitPrice
      schema: order
  name: totalKitPrice
- comment: ""
  definition:
    function:
      name: totalParticipants
      schema: order
  name: totalParticipants
- comment: ""
  definition:
    function:
      name: totalPrice
      schema: order
  name: totalPrice
- comment: ""
  definition:
    function:
      name: totalPrice2
      schema: order
  name: totalPrice2
- comment: ""
  definition:
    function:
      name: walletAmountUsable
      schema: order
  name: walletAmountUsable
insert_permissions:
- permission:
    backend_only: false
    check: {}
    columns:
    - address
    - brandId
    - couponDiscount
    - customerId
    - customerInfo
    - customerKeycloakId
    - fulfillmentInfo
    - isTest
    - loyaltyPointsUsed
    - orderId
    - paidPrice
    - paymentId
    - paymentMethodId
    - paymentRequestInfo
    - paymentStatus
    - status
    - paymentCustomerId
    - subscriptionOccurenceId
    - tip
    - transactionId
    - walletAmountUsed
    set:
      brandId: x-hasura-Brand-Id
      customerKeycloakId: x-hasura-Keycloak-Id
      source: x-hasura-Source
  role: consumer
- permission:
    backend_only: false
    check: {}
    columns:
    - address
    - brandId
    - couponDiscount
    - customerInfo
    - fulfillmentInfo
    - isTest
    - loyaltyPointsUsed
    - paidPrice
    - paymentId
    - paymentMethodId
    - paymentRequestInfo
    - paymentStatus
    - status
    - paymentCustomerId
    - subscriptionOccurenceId
    - tip
    - transactionId
    - walletAmountUsed
    set:
      brandId: x-hasura-Brand-Id
      source: x-hasura-Source
  role: guest-consumer
select_permissions:
- permission:
    allow_aggregations: true
    columns:
    - isTest
    - brandId
    - customerId
    - id
    - loyaltyPointsUsed
    - orderId
    - subscriptionOccurenceId
    - address
    - customerInfo
    - fulfillmentInfo
    - paymentRequestInfo
    - amount
    - couponDiscount
    - paidPrice
    - tip
    - walletAmountUsed
    - customerKeycloakId
    - paymentMethodId
    - paymentStatus
    - source
    - status
    - paymentCustomerId
    - transactionId
    - created_at
    - paymentUpdatedAt
    - updated_at
    - paymentId
    computed_fields:
    - addOnTotal
    - billingDetails
    - deliveryPrice
    - discount
    - isCartValid
    - itemTotal
    - loyaltyPointsUsable
    - subTotal
    - tax
    - taxPercent
    - totalPrice
    - walletAmountUsable
    filter: {}
  role: consumer
- permission:
    allow_aggregations: true
    columns:
    - address
    - amount
    - brandId
    - couponDiscount
    - created_at
    - customerId
    - customerInfo
    - customerKeycloakId
    - fulfillmentInfo
    - id
    - isTest
    - loyaltyPointsUsed
    - orderId
    - paidPrice
    - paymentId
    - paymentMethodId
    - paymentRequestInfo
    - paymentStatus
    - paymentUpdatedAt
    - source
    - status
    - paymentCustomerId
    - subscriptionOccurenceId
    - tip
    - transactionId
    - updated_at
    - walletAmountUsed
    computed_fields:
    - addOnTotal
    - billingDetails
    - deliveryPrice
    - discount
    - isCartValid
    - itemTotal
    - loyaltyPointsUsable
    - subTotal
    - tax
    - taxPercent
    - totalPrice
    - walletAmountUsable
    filter: {}
  role: guest-consumer
update_permissions:
- permission:
    check: null
    columns:
    - address
    - amount
    - couponDiscount
    - customerId
    - customerInfo
    - customerKeycloakId
    - fulfillmentInfo
    - id
    - isTest
    - loyaltyPointsUsed
    - paidPrice
    - paymentId
    - paymentMethodId
    - paymentCustomerId
    - subscriptionOccurenceId
    - tip
    - walletAmountUsed
    filter: {}
    set:
      customerKeycloakId: x-hasura-Keycloak-Id
  role: consumer
delete_permissions:
- permission:
    filter: {}
  role: consumer
event_triggers:
- definition:
    enable_manual: true
    update:
      columns:
      - paymentRetryAttempt
  name: handleCartPayment
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: https://dailyos-backend.ngrok.io/server/api/payment/handle-cart-payment
- definition:
    enable_manual: true
    update:
      columns:
      - status
  name: printKOT
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: "{{DAILYOS_SERVER_URL}}/event/print-kot"
- definition:
    enable_manual: true
    update:
      columns:
      - status
  name: sendEmailOnOrderCartStatusChange
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: "{{DAILYOS_SERVER_URL}}/api/order/status"
